# -*- coding: utf-8 -*-
"""FIFA ANALYSIS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Cy5RkFmTQnbmedZtrIK5NVl8zjH58RnX

## **IMPORTING DATASET**
"""

import pandas as pd

# Load both tables
players_df = pd.read_csv("players.csv")
teams_df = pd.read_csv("teams.csv")

"""## **OVERVIEW OF DATASET**"""

print(players_df.head())
print(teams_df.head())

print(players_df.tail())
print(teams_df.tail())

print(players_df.shape)
print(teams_df.shape)

"""## **DATA CLEANING & DATA PREPROCESSING**"""

#1.Check for missing values
print(players_df.isnull().sum())
print(teams_df.isnull().sum())

# 2.Drop rows with too many missing values
players_df = players_df.dropna(subset=["Overall", "Potential"])
print(players_df)

# 3.Convert numerical columns to correct types
players_df["Age"] = players_df["Age"].astype(int)
print(players_df.dtypes)

# 4.Fill missing values correctly
players_df = players_df.assign(
    ClubNumber=players_df['ClubNumber'].fillna(0),
    ContractUntil=players_df['ContractUntil'].fillna('Unknown').astype(str),
    ClubPosition=players_df['ClubPosition'].fillna('Unknown')
)
print(players_df)

#5.Inspect unique values in 'ContractUntil' column
print(players_df['ContractUntil'].unique())

# Convert 'ContractUntil' to datetime with explicit format (if format is known)
players_df['ContractUntil'] = pd.to_datetime(players_df['ContractUntil'], format='%Y-%m-%d', errors='coerce')

"""ANALYSING THE DATA AND VISUALIZING IT"""

import matplotlib.pyplot as plt
import seaborn as sns

#1.Compute top 10 teams based on average player rating
top_teams = players_df.groupby("Club")["Overall"].mean().sort_values(ascending=False).head(10)
print(top_teams)

# Bar Chart for Top 10 Teams
plt.figure(figsize=(12, 6))
sns.barplot(x=top_teams.index, y=top_teams.values, hue=top_teams.index, palette="coolwarm", legend=False)

plt.xticks(rotation=45)
plt.title("Top 10 Teams Based on Average Player Rating")
plt.xlabel("Team")
plt.ylabel("Average Rating")

plt.show()

#2.Correlation Between Age & Player Rating

plt.figure(figsize=(8,5))
sns.scatterplot(x=players_df["Age"], y=players_df["Overall"], alpha=0.5)
plt.title("Age vs. Overall Rating of Players")
plt.xlabel("Age")
plt.ylabel("Overall Rating")
plt.show()

#3.Player Age Distribution

plt.figure(figsize=(8, 5))
sns.histplot(players_df["Age"], bins=20, kde=True, color="blue")
plt.title("Distribution of Players' Age")
plt.xlabel("Age")
plt.ylabel("Number of Players")
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# 4.Compute the top 10 countries based on the number of players
top_countries = players_df["Nationality"].value_counts().head(10)
print(top_countries)

# Bar Chart for Top 10 Countries
plt.figure(figsize=(12, 6))
sns.barplot(x=top_countries.index, y=top_countries.values, hue=top_countries.index, palette="coolwarm", legend=False)

plt.xticks(rotation=45)
plt.title("Top 10 Countries with Most Players")
plt.xlabel("Country")
plt.ylabel("Number of Players")

plt.show()

#5.Player Height vs. Weight Scatter Plot

plt.figure(figsize=(8,5))
sns.scatterplot(x=players_df["Height"], y=players_df["Weight"], alpha=0.5, color="red")
plt.title("Player Height vs. Weight")
plt.xlabel("Height (cm)")
plt.ylabel("Weight (kg)")
plt.show()